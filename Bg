local SilentAimModule = {}

Playersaimbot = nil
PlayersPosition = nil

NPCaimbot = nil
NPCPosition = nil

local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local currentCamera = workspace.CurrentCamera
local RunService = game:GetService("RunService")

local SilentAimPlayersEnabled = false
local SilentAimNPCsEnabled = false

local maxRange = 1000

local function getHRP(model)
    if not model or not model:FindFirstChild("HumanoidRootPart") then return nil end
    return model.HumanoidRootPart
end

local function getClosestPlayer(lpHRP)
    local closest = nil
    local closestDist = math.huge
    for _, pl in ipairs(Players:GetPlayers()) do
        if pl ~= localPlayer and pl.Character and pl.Character.Parent ~= nil then
            local hrp = getHRP(pl.Character)
            if hrp then
                local dist = (hrp.Position - lpHRP.Position).Magnitude
                if dist <= maxRange and dist < closestDist then
                    closestDist = dist
                    closest = pl
                end
            end
        end
    end
    return closest
end

local function getClosestNPC(lpHRP)
    local enemiesFolder = workspace:FindFirstChild("Enemies")
    if not enemiesFolder then return nil end

    local closest = nil
    local closestDist = math.huge
    for _, npc in ipairs(enemiesFolder:GetChildren()) do
        if npc:IsA("Model") and npc:FindFirstChild("Humanoid") then
            local hrp = getHRP(npc)
            if hrp then
                local dist = (hrp.Position - lpHRP.Position).Magnitude
                if dist <= maxRange and dist < closestDist then
                    closestDist = dist
                    closest = npc
                end
            end
        end
    end
    return closest
end

RunService.Heartbeat:Connect(function()
    local lpChar = localPlayer.Character
    if not lpChar then return end
    local lpHRP = lpChar:FindFirstChild("HumanoidRootPart")
    if not lpHRP then return end

    if SilentAimPlayersEnabled then
        local closestPl = getClosestPlayer(lpHRP)
        if closestPl then
            Playersaimbot = closestPl.Name
            local hrp = getHRP(closestPl.Character)
            PlayersPosition = hrp and hrp.Position or nil
        else
            Playersaimbot, PlayersPosition = nil, nil
        end
    else
        Playersaimbot, PlayersPosition = nil, nil
    end

    if SilentAimNPCsEnabled then
        local closestNPC = getClosestNPC(lpHRP)
        if closestNPC then
            NPCaimbot = closestNPC.Name
            local hrp = getHRP(closestNPC)
            NPCPosition = hrp and hrp.Position or nil
        else
            NPCaimbot, NPCPosition = nil, nil
        end
    else
        NPCaimbot, NPCPosition = nil, nil
    end
end)

spawn(function()
    local success, gg = pcall(function() return getrawmetatable(game) end)
    if not success or not gg then return end
    local old = gg.__namecall
    if not old then return end

    setreadonly(gg, false)
    gg.__namecall = newcclosure(function(...)
        local method = getnamecallmethod()
        local args = {...}

        local targetPos = nil
        if SilentAimPlayersEnabled and PlayersPosition then
            targetPos = PlayersPosition
        elseif SilentAimNPCsEnabled and NPCPosition then
            targetPos = NPCPosition
        end

        if targetPos and tostring(method) == "FireServer" then
            if tostring(args[1]) == "RemoteEvent" then
                if tostring(args[2]) ~= "true" and tostring(args[2]) ~= "false" then
                    args[2] = targetPos
                    return old(unpack(args))
                end
            end
        end
        return old(...)
    end)
    setreadonly(gg, true)
end)

function SilentAimModule:SetPlayerSilentAim(state)
    SilentAimPlayersEnabled = state
end

function SilentAimModule:SetNPCSilentAim(state)
    SilentAimNPCsEnabled = state
end

function SilentAimModule:setDistanceLimit(num)
    if typeof(num) == "number" then
        maxRange = num
    end
end

return SilentAimModule
