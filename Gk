local ESPModule = {}

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CommE = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CommE")
local CommF = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CommF_")
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid") 

local V3Enabled = false
local BunnyHopEnabled = false
local ESPEnabled = false
local BusoEnabled = false
local v3LoopRunning = false
local antiAfkEnabled = false

local currentTool = nil
local ESPs = {}
local cooldownTime = 31
local v3Loop = nil

-- =========================
-- Team Check
-- =========================
local function isAllyWithMe(targetPlayer)
	local myGui = player:FindFirstChild("PlayerGui")
	if not myGui then return false end

	local scrolling = myGui:FindFirstChild("Main")
		and myGui.Main:FindFirstChild("Allies")
		and myGui.Main.Allies:FindFirstChild("Container")
		and myGui.Main.Allies.Container:FindFirstChild("Allies")
		and myGui.Main.Allies.Container.Allies:FindFirstChild("ScrollingFrame")

	if scrolling then
		for _, frame in pairs(scrolling:GetDescendants()) do
			if frame:IsA("ImageButton") and frame.Name == targetPlayer.Name then
				return true
			end
		end
	end

	return false
end

local function isEnemy(targetPlayer)
	if not targetPlayer or targetPlayer == player then
		return false
	end

	local myTeam = player.Team
	local targetTeam = targetPlayer.Team

	if myTeam and targetTeam then
		if myTeam.Name == "Pirates" and targetTeam.Name == "Marines" then
			return true
		elseif myTeam.Name == "Marines" and targetTeam.Name == "Pirates" then
			return true
		end

		if myTeam.Name == "Pirates" and targetTeam.Name == "Pirates" then
			if isAllyWithMe(targetPlayer) then
				return false -- ally, not enemy
			end
			return true
		end

		if myTeam.Name == "Marines" and targetTeam.Name == "Marines" then
			return false
		end
	end

	return true
end

-- =========================
-- Ability V3
-- =========================
local function clickActivateAbility()
    if CommE then
        CommE:FireServer("ActivateAbility")
    end
end

local function startV3Loop()
    if v3LoopRunning then return end
    v3LoopRunning = true
    v3Loop = task.spawn(function()
        while v3LoopRunning do
            if not player or not player.Parent then break end
            pcall(clickActivateAbility)
            task.wait(cooldownTime)
        end
        v3Loop = nil
    end)
end

local function stopV3Loop()
    if not v3LoopRunning then return end
    v3LoopRunning = false
    v3Loop = nil
end

-- =========================
-- V Skill Detection
-- =========================
local old
old = hookmetamethod(game, "__namecall", function(self, ...)
    local method = getnamecallmethod()
    local args = {...}

    if (method == "InvokeServer" or method == "FireServer") then
        local a1 = args[1]

        if typeof(a1) == "string" and a1:upper() == "DODGE" then
            if BunnyHopEnabled then
                local ok, h = pcall(function() return humanoid end)
                if ok and h and h.Parent then
                    task.defer(function()
                        pcall(function()
                            h:ChangeState(Enum.HumanoidStateType.Jumping)
                        end)
                    end)
                end
            end
        end
    end
    return old(self, ...)
end)

-- =========================
-- Global Player ESP with Colors
-- =========================
local espFolder = game.CoreGui:FindFirstChild("GlobalESP")
if not espFolder then
    espFolder = Instance.new("Folder")
    espFolder.Name = "GlobalESP"
    espFolder.Parent = game.CoreGui
end

local function getESPColor(player)
	if player == game.Players.LocalPlayer then
		return Color3.fromRGB(0, 255, 0)
	elseif isAllyWithMe(player) then
		return Color3.fromRGB(0, 255, 0)
	elseif isEnemy(player) then
		return Color3.fromRGB(255, 255, 0)
	else
		return Color3.fromRGB(0, 255, 0)
	end
end

-- =========================
-- Optimized ESP System
-- =========================
local function createESP(targetPlayer)
	if ESPs[targetPlayer] then return end
	local char = targetPlayer.Character
	if not char then return end
	local head = char:FindFirstChild("Head")
	if not head then return end

	local billboard = Instance.new("BillboardGui")
	billboard.Name = targetPlayer.Name
	billboard.Adornee = head
	billboard.Size = UDim2.fromOffset(220, 50)
	billboard.AlwaysOnTop = true
	billboard.StudsOffset = Vector3.new(0, 3, 0)
	billboard.Parent = espFolder

	local levelLabel = Instance.new("TextLabel")
	levelLabel.Name = "LevelLabel"
	levelLabel.Size = UDim2.new(1, 0, 0.5, 0)
	levelLabel.Position = UDim2.new(0, 0, 0, 0)
	levelLabel.BackgroundTransparency = 1
	levelLabel.Text = "Lv. ???"
	levelLabel.TextColor3 = Color3.fromRGB(0, 170, 255)
	levelLabel.TextStrokeTransparency = 0.2
	levelLabel.Font = Enum.Font.SourceSansBold
	levelLabel.TextSize = 14
	levelLabel.TextXAlignment = Enum.TextXAlignment.Center
	levelLabel.Parent = billboard

	local mainLabel = Instance.new("TextLabel")
	mainLabel.Name = "MainLabel"
	mainLabel.Size = UDim2.new(1, 0, 0.5, 0)
	mainLabel.Position = UDim2.new(0, 0, 0.5, 0)
	mainLabel.BackgroundTransparency = 1
	mainLabel.Text = "[0] "..targetPlayer.DisplayName.." (0m)"
	mainLabel.TextColor3 = getESPColor(targetPlayer)
	mainLabel.TextStrokeTransparency = 0.2
	mainLabel.Font = Enum.Font.SourceSansBold
	mainLabel.TextSize = 16
	mainLabel.TextXAlignment = Enum.TextXAlignment.Center
	mainLabel.Parent = billboard

	ESPs[targetPlayer] = billboard
end

RunService.Heartbeat:Connect(function()
	if not ESPEnabled then
		for _, gui in pairs(ESPs) do
			if gui then gui.Enabled = false end
		end
		return
	end

	for _, targetPlayer in pairs(Players:GetPlayers()) do
		if targetPlayer ~= player then
			if not ESPs[targetPlayer] then
				createESP(targetPlayer)
			end

			local gui = ESPs[targetPlayer]
			if gui then
				local char = targetPlayer.Character
				local head = char and char:FindFirstChild("Head")
				local hrp = char and char:FindFirstChild("HumanoidRootPart")
				local humanoid = char and char:FindFirstChildOfClass("Humanoid")
				local myHRP = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

				if char and head and hrp and humanoid and myHRP then
					gui.Adornee = head
					gui.Enabled = true
					local dist = (myHRP.Position - hrp.Position).Magnitude
					local nameLabel = gui:FindFirstChild("MainLabel")
					local levelLabel = gui:FindFirstChild("LevelLabel")

					if levelLabel then
						local dataFolder = targetPlayer:FindFirstChild("Data")
						local levelValue = dataFolder and dataFolder:FindFirstChild("Level")
						levelLabel.Text = levelValue and ("Lv. "..levelValue.Value) or "Lv. ???"
					end
					if nameLabel then
						nameLabel.Text = "["..math.floor(humanoid.Health).."] "..targetPlayer.DisplayName.." ("..math.floor(dist).."m)"
						nameLabel.TextColor3 = getESPColor(targetPlayer)
					end
				else
					gui.Enabled = false
				end
			end
		end
	end
end)

do
	local player = game:GetService("Players").LocalPlayer
	local vu = game:GetService("VirtualUser")
	local vim = game:GetService("VirtualInputManager")
	
	if antiAfkEnabled then
		player.Idled:Connect(function()
			pcall(function()
		        vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
		        task.wait(1)
		        vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
		    end)

		    pcall(function()
		        vim:SendTouchEvent(500, 300, Enum.UserInputState.Begin, false, game)
		        task.wait(0.8)
		        vim:SendTouchEvent(500, 300, Enum.UserInputState.End, false, game)
		    end)
		end)
	end
end

-- =========================
-- State Toggles
-- =========================
function ESPModule:SetV3(state)
    V3Enabled = state
    if state then
        startV3Loop()
    else
        stopV3Loop()
    end
end

function ESPModule:SetBunnyhop(state)
    BunnyHopEnabled = state
end

function ESPModule:SetAntiAfk(state)
    antiAfkEnabled = state
end

function ESPModule:SetBuso(state)
    BusoEnabled = state
    if state then
        pcall(function() CommF:InvokeServer("Buso") end)
    end
end

function ESPModule:SetESP(state)
	ESPEnabled = state
end

-- =========================
-- Character Respawn Handling
-- =========================
local function onCharacterAdded(newChar)
    char = newChar
    humanoid = char:WaitForChild("Humanoid")

    if BunnyHopEnabled then
        -- nothing extra needed, the hookmetamethod will keep working
    end
    if V3Enabled then
        startV3Loop()
    end
    if BusoEnabled then
        pcall(function() CommF:InvokeServer("Buso") end)
    end
end

if player.Character then
    onCharacterAdded(player.Character)
end
player.CharacterAdded:Connect(onCharacterAdded)

return ESPModule
