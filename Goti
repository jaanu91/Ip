local StuffsModule = {}

local PingsOrFpsEnabled = false
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local waterPart = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("WaterBase-Plane")

local ScreenGui
local FpsPingLabel
local FpsBoostEnabled = false
local InfiniteEnergy = false
local FastAttackEnabled = false
local WalkWaterEnabled = false

local savedSettings = {}
local connections = {}

local function createGui()
	if ScreenGui then return end 

	ScreenGui = Instance.new("ScreenGui")
	ScreenGui.Name = "FpsPingGui"
	ScreenGui.ResetOnSpawn = false
	ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

	FpsPingLabel = Instance.new("TextLabel")
	FpsPingLabel.Name = "FpsPingLabel"
	FpsPingLabel.Size = UDim2.new(0, 120, 0, 20) -- wider for both values
	FpsPingLabel.Position = UDim2.new(1, -10, 0, 10) -- top-right corner
	FpsPingLabel.AnchorPoint = Vector2.new(1, 0) 
	FpsPingLabel.BackgroundTransparency = 1
	FpsPingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	FpsPingLabel.Font = Enum.Font.SourceSansBold
	FpsPingLabel.TextSize = 18
	FpsPingLabel.TextXAlignment = Enum.TextXAlignment.Right
	FpsPingLabel.RichText = true -- allow color tags
	FpsPingLabel.Parent = ScreenGui
end

local lastTime = tick()
local frameCount = 0
local fps = 0

RunService.RenderStepped:Connect(function(deltaTime)
	if not PingsOrFpsEnabled then
		if ScreenGui then
			ScreenGui.Enabled = false
		end
		return
	end

	createGui()
	ScreenGui.Enabled = true

	frameCount = frameCount + 1
	if tick() - lastTime >= 1 then
		fps = frameCount
		frameCount = 0
		lastTime = tick()
	end

	local ping = math.floor(LocalPlayer:GetNetworkPing() * 2000)

	local fpsColor
	if fps >= 50 then
		fpsColor = "00FF00" -- Green
	elseif fps >= 30 then
		fpsColor = "FFA500" -- Orange
	else
		fpsColor = "FF0000" -- Red
	end

	local pingColor
	if ping <= 80 then
		pingColor = "00FF00" -- Green
	elseif ping <= 150 then
		pingColor = "FFFF00" -- Yellow
	else
		pingColor = "FF0000" -- Red
	end

	FpsPingLabel.Text = string.format(
		'<font color="#%s">FPS: %d</font>  |  <font color="#%s">Ping: %dms</font>',
		fpsColor, fps, pingColor, ping
	)
end)

local function optimizeInstance(v)
	if v:IsA("Part") or v:IsA("MeshPart") then
		v.Material = Enum.Material.Plastic
		v.Reflectance = 0
	elseif v:IsA("Decal") or v:IsA("Texture") then
		v.Transparency = 1
	elseif v:IsA("ParticleEmitter") then
		v.Lifetime = NumberRange.new(0, 0)
	elseif v:IsA("Trail") then
		v.Lifetime = 0
	elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
		v.Enabled = false
	end
end

local function optimizeUI(instance)
    if instance:IsA("ImageLabel") or instance:IsA("ImageButton") then
        instance.ImageTransparency = 0
        
    elseif instance:IsA("TextLabel") or instance:IsA("TextButton") then
        instance.RichText = false -- turn off rich text if not needed
        instance.TextStrokeTransparency = 1 -- disable stroke
        instance.TextSize = math.min(instance.TextSize, 14) -- reduce text size slightly
        instance.Font = Enum.Font.SourceSans -- simpler font uses less GPU
    end
end

local function infinitestam()
    local energy = LocalPlayer.Character:WaitForChild("Energy")
    energy.Changed:Connect(function()
        if InfiniteEnergy then
            energy.Value = energy.MaxValue or 100
        end
    end)
end

LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1)
    infinitestam()
end)

if LocalPlayer.Character then
    infinitestam()
end

function Hop()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    local Deleted = false
    function TPReturner()
        local Site;
        if foundAnything == "" then
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
        else
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
        end
        local ID = ""
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        local num = 0;
        for i,v in pairs(Site.data) do
            local Possible = true
            ID = tostring(v.id)
            if tonumber(v.maxPlayers) > tonumber(v.playing) then
                for _,Existing in pairs(AllIDs) do
                    if num ~= 0 then
                        if ID == tostring(Existing) then
                            Possible = false
                        end
                    else
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            local delFile = pcall(function()
                                -- delfile("NotSameServers.json")
                                AllIDs = {}
                                table.insert(AllIDs, actualHour)
                            end)
                        end
                    end
                    num = num + 1
                end
                if Possible == true then
                    table.insert(AllIDs, ID)
                    wait(.1)
                    pcall(function()
                        -- writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                        wait()
                        game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                    end)
                    wait(.1)
                end
            end
        end
    end
    function Teleport() 
        while wait(.1) do
            pcall(function()
                TPReturner()
                if foundAnything ~= "" then
                    TPReturner()
                end
            end)
        end
    end
    Teleport()
end

do
    local _ENV = (getgenv or getrenv or getfenv)()

    local function SafeWaitForChild(parent, childName)
        local success, result = pcall(function()
            return parent:WaitForChild(childName)
        end)
        if not success or not result then
            warn("noooooo: " .. childName)
        end
        return result
    end

    local function WaitChilds(path, ...)
        local last = path
        for _, child in {...} do
            last = last:FindFirstChild(child) or SafeWaitForChild(last, child)
            if not last then break end
        end
        return last
    end

    local VirtualInputManager = game:GetService("VirtualInputManager")
    local CollectionService = game:GetService("CollectionService")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local TeleportService = game:GetService("TeleportService")
    local RunService = game:GetService("RunService")
    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer

    if not Player then
        warn("Không tìm thấy người chơi cục bộ.")
        return
    end

    local Remotes = SafeWaitForChild(ReplicatedStorage, "Remotes")
    if not Remotes then return end

    local Validator = SafeWaitForChild(Remotes, "Validator")
    local CommF = SafeWaitForChild(Remotes, "CommF_")
    local CommE = SafeWaitForChild(Remotes, "CommE")

    local ChestModels = SafeWaitForChild(workspace, "ChestModels")
    local WorldOrigin = SafeWaitForChild(workspace, "_WorldOrigin")
    local Characters = SafeWaitForChild(workspace, "Characters")
    local Enemies = SafeWaitForChild(workspace, "Enemies")
    local Map = SafeWaitForChild(workspace, "Map")

    local EnemySpawns = SafeWaitForChild(WorldOrigin, "EnemySpawns")
    local Locations = SafeWaitForChild(WorldOrigin, "Locations")

    local RenderStepped = RunService.RenderStepped
    local Heartbeat = RunService.Heartbeat
    local Stepped = RunService.Stepped

    local Modules = SafeWaitForChild(ReplicatedStorage, "Modules")
    local Net = SafeWaitForChild(Modules, "Net")

    local sethiddenproperty = sethiddenproperty or function(...) return ... end
    local setupvalue = setupvalue or (debug and debug.setupvalue)
    local getupvalue = getupvalue or (debug and debug.getupvalue)

    local Settings = {
        AutoClick = true,
        ClickDelay = 0,
    }

    local Module = {}

    Module.FastAttack = (function()
        if _ENV.rz_FastAttack then
            return _ENV.rz_FastAttack
        end

        local FastAttack = {
            Distance = 100,
            attackMobs = true,
            attackPlayers = true,
            Equipped = nil
        }

        local RegisterAttack = SafeWaitForChild(Net, "RE/RegisterAttack")
        local RegisterHit = SafeWaitForChild(Net, "RE/RegisterHit")

        local function IsAlive(character)
        return character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0
        end

        local function ProcessEnemies(OthersEnemies, Folder)
            local BasePart = nil
            for _, Enemy in Folder:GetChildren() do
                local Head = Enemy:FindFirstChild("Head")
                if Head and IsAlive(Enemy) and Player:DistanceFromCharacter(Head.Position) < FastAttack.Distance then
                    if Enemy ~= Player.Character then
                        table.insert(OthersEnemies, { Enemy, Head })
                        BasePart = Head
                    end
                end
            end
            return BasePart
        end

        function FastAttack:Attack(BasePart, OthersEnemies)
            if not BasePart or #OthersEnemies == 0 then return end
            RegisterAttack:FireServer(Settings.ClickDelay or 0)
            RegisterHit:FireServer(BasePart, OthersEnemies)
        end

        function FastAttack:AttackNearest()
            local OthersEnemies = {}
            local Part1 = ProcessEnemies(OthersEnemies, Enemies)
            local Part2 = ProcessEnemies(OthersEnemies, Characters)
            if #OthersEnemies > 0 then
                self:Attack(Part1 or Part2, OthersEnemies)
            else
                task.wait(0)
            end
        end

        function FastAttack:BladeHits()
            local Equipped = IsAlive(Player.Character) and Player.Character:FindFirstChildOfClass("Tool")
            if Equipped and Equipped.ToolTip ~= "Gun" then
                self:AttackNearest()
            else
                task.wait(0)
            end
        end

        task.spawn(function()
            while task.wait(Settings.ClickDelay) do
                if Settings.AutoClick and FastAttackEnabled then
                    FastAttack:BladeHits()
                end
            end
        end)

        _ENV.rz_FastAttack = FastAttack
        return FastAttack
    end)()
end

function StuffsModule:SetFpsBoost(state)
    FpsBoostEnabled = state
    if state then
	    _G.Settings = {
		    Players = {
		        ["Ignore Me"] = true, -- Ignore your Character
		        ["Ignore Others"] = true-- Ignore other Characters
		    },
		    Meshes = {
		        Destroy = true, -- Destroy Meshes
		        LowDetail = true -- Low detail meshes (NOT SURE IT DOES ANYTHING)
		    },
		    Images = {
		        Invisible = false, -- Invisible Images
		        LowDetail = true, -- Low detail images (NOT SURE IT DOES ANYTHING)
		        Destroy = false, -- Destroy Images
		    },
		    ["No Particles"] = true, -- Disables all ParticleEmitter, Trail, Smoke, Fire and Sparkles
		    ["No Camera Effects"] = true, -- Disables all PostEffect's (Camera/Lighting Effects)
		    ["No Explosions"] = true, -- Makes Explosion's invisible
		    ["No Clothes"] = true, -- Removes Clothing from the game
		    ["Low Water Graphics"] = true, -- Removes Water Quality
		    ["No Shadows"] = true, -- Remove Shadows
		    ["Low Rendering"] = true, -- Lower Rendering
		    ["Low Quality Parts"] = true -- Lower quality parts
		}
		if _G.Settings then
			loadstring(game:HttpGet("https://raw.githubusercontent.com/CasperFlyModz/discord.gg-rips/main/FPSBooster.lua"))()
		end
    end
end

function StuffsModule:SetINFEnergy(state)
    InfiniteEnergy = state
end

function StuffsModule:SetHopServer(state)
    Hop()
end

function StuffsModule:SetRejoinServer(state)
    game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
end

function StuffsModule:SetFastAttack(state)
    FastAttackEnabled = state
end

function StuffsModule:SetWalkWater(state)
    WalkWaterEnabled = state
    if WalkWaterEnabled then
        waterPart.Size = Vector3.new(1000,110,1000)
    else
        waterPart.Size = Vector3.new(1000,80,1000)
    end
end

function StuffsModule:SetPingsOrFps(state)
	PingsOrFpsEnabled = state
	if ScreenGui then
		ScreenGui.Enabled = state
	end
end

return StuffsModule
