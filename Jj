local ESPModule = {}

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CommE = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CommE")
local CommF = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CommF_")
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid") 

local V3Enabled = false
local BunnyHopEnabled = false
local ESPEnabled = false
local BusoEnabled = false
local v3LoopRunning = false

local currentTool = nil
local connections = {}
local ESPs = {}
local cooldownTime = 31
local v3Loop = nil

-- =========================
-- Team Check
-- =========================
local function isAllyWithMe(targetPlayer)
	local myGui = player:FindFirstChild("PlayerGui")
	if not myGui then return false end

	local scrolling = myGui:FindFirstChild("Main")
		and myGui.Main:FindFirstChild("Allies")
		and myGui.Main.Allies:FindFirstChild("Container")
		and myGui.Main.Allies.Container:FindFirstChild("Allies")
		and myGui.Main.Allies.Container.Allies:FindFirstChild("ScrollingFrame")

	if scrolling then
		for _, frame in pairs(scrolling:GetDescendants()) do
			if frame:IsA("ImageButton") and frame.Name == targetPlayer.Name then
				return true
			end
		end
	end

	return false
end

local function isEnemy(targetPlayer)
	if not targetPlayer or targetPlayer == player then
		return false
	end

	local myTeam = player.Team
	local targetTeam = targetPlayer.Team

	if myTeam and targetTeam then
		if myTeam.Name == "Pirates" and targetTeam.Name == "Marines" then
			return true
		elseif myTeam.Name == "Marines" and targetTeam.Name == "Pirates" then
			return true
		end

		if myTeam.Name == "Pirates" and targetTeam.Name == "Pirates" then
			if isAllyWithMe(targetPlayer) then
				return false -- ally, not enemy
			end
			return true
		end

		if myTeam.Name == "Marines" and targetTeam.Name == "Marines" then
			return false
		end
	end

	return true
end

-- =========================
-- Ability V3
-- =========================
local function clickActivateAbility()
    if CommE then
        CommE:FireServer("ActivateAbility")
    end
end

local function startV3Loop()
    if v3LoopRunning then return end
    v3LoopRunning = true
    v3Loop = task.spawn(function()
        while v3LoopRunning do
            if not player or not player.Parent then break end
            pcall(clickActivateAbility)
            task.wait(cooldownTime)
        end
        v3Loop = nil
    end)
end

local function stopV3Loop()
    if not v3LoopRunning then return end
    v3LoopRunning = false
    v3Loop = nil
end

-- =========================
-- V Skill Detection
-- =========================
local old
old = hookmetamethod(game, "__namecall", function(self, ...)
    local method = getnamecallmethod()
    local args = {...}

    if (method == "InvokeServer" or method == "FireServer") then
        local a1 = args[1]

        if typeof(a1) == "string" and a1:upper() == "DODGE" then
            if BunnyHopEnabled then
                local ok, h = pcall(function() return humanoid end)
                if ok and h and h.Parent then
                    task.defer(function()
                        pcall(function()
                            h:ChangeState(Enum.HumanoidStateType.Jumping)
                        end)
                    end)
                end
            end
        end
    end
    return old(self, ...)
end)

-- =========================
-- Global Player ESP with Colors
-- =========================
local espFolder = game.CoreGui:FindFirstChild("GlobalESP")
if not espFolder then
    espFolder = Instance.new("Folder")
    espFolder.Name = "GlobalESP"
    espFolder.Parent = game.CoreGui
end

local function getESPColor(player)
	if player == game.Players.LocalPlayer then
		return Color3.fromRGB(0, 255, 0)
	elseif isAllyWithMe(player) then
		return Color3.fromRGB(0, 255, 0)
	elseif isEnemy(player) then
		return Color3.fromRGB(255, 255, 0)
	else
		return Color3.fromRGB(0, 255, 0)
	end
end

local function createESP(player)
	if ESPs[player] then
		ESPs[player]:Destroy()
		ESPs[player] = nil
	end

	local char = player.Character
	if not char then return end
	local head = char:FindFirstChild("Head")
	local humanoid = char:FindFirstChildOfClass("Humanoid")
	if not head or not humanoid then return end

	local billboard = Instance.new("BillboardGui")
	billboard.Name = player.Name
	billboard.Adornee = head
	billboard.Size = UDim2.fromOffset(220, 50) -- wider to fit distance text
	billboard.AlwaysOnTop = true
	billboard.StudsOffset = Vector3.new(0, 3, 0)
	billboard.Parent = espFolder

	local levelLabel = Instance.new("TextLabel")
	levelLabel.Name = "LevelLabel"
	levelLabel.Size = UDim2.new(1, 0, 0.5, 0)
	levelLabel.Position = UDim2.new(0, 0, -0.5, 0)
	levelLabel.BackgroundTransparency = 1
	levelLabel.Text = "Lv. ???"
	levelLabel.TextColor3 = Color3.fromRGB(0, 170, 255)
	levelLabel.TextStrokeTransparency = 0
	levelLabel.Font = Enum.Font.SourceSansBold
	levelLabel.TextSize = 14
	levelLabel.TextXAlignment = Enum.TextXAlignment.Center
	levelLabel.Parent = billboard

	local mainLabel = Instance.new("TextLabel")
	mainLabel.Name = "MainLabel"
	mainLabel.Size = UDim2.new(1, 0, 0.5, 0)
	mainLabel.Position = UDim2.new(0, 0, 0.5, 0)
	mainLabel.BackgroundTransparency = 1
	mainLabel.Text = "[0] "..player.DisplayName.." (0m)"
	mainLabel.TextColor3 = getESPColor(player)
	mainLabel.TextStrokeTransparency = 0
	mainLabel.Font = Enum.Font.SourceSansBold
	mainLabel.TextSize = 16
	mainLabel.TextXAlignment = Enum.TextXAlignment.Center
	mainLabel.Parent = billboard

	ESPs[player] = billboard
end

RunService.RenderStepped:Connect(function()
	local myChar = game.Players.LocalPlayer.Character
	local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")

	for player, billboard in pairs(ESPs) do
		local char = player.Character
		local humanoid = char and char:FindFirstChildOfClass("Humanoid")
		local hrp = char and char:FindFirstChild("HumanoidRootPart")

		if billboard and char and humanoid then
			local nameLabel = billboard:FindFirstChild("MainLabel")
			local levelLabel = billboard:FindFirstChild("LevelLabel")

			if levelLabel then
				local dataFolder = player:FindFirstChild("Data")
				local levelValue = dataFolder and dataFolder:FindFirstChild("Level")
				if levelValue and levelValue:IsA("IntValue") then
					levelLabel.Text = "Lv. "..levelValue.Value
				else
					levelLabel.Text = "Lv. ???"
				end
			end

			if nameLabel then
				local dist = 0
				if myHRP and hrp then
					dist = (myHRP.Position - hrp.Position).Magnitude
				end
				nameLabel.Text = "["..math.floor(humanoid.Health).."] "..player.DisplayName.." ("..math.floor(dist).."m)"
				nameLabel.TextColor3 = getESPColor(player)
			end
		end
	end
end)

local function setupPlayerESP(player)
	player.CharacterAdded:Connect(function(char)
		task.wait(0.5)
		createESP(player)
	end)
	if player.Character then
		task.wait(0.5)
		createESP(player)
	end
end

local function removeESP(player)
	if ESPs[player] then
		ESPs[player]:Destroy()
		ESPs[player] = nil
	end
end

-- =========================
-- State Toggles
-- =========================
function ESPModule:SetV3(state)
    V3Enabled = state
    if state then
        startV3Loop()
    else
        stopV3Loop()
    end
end

function ESPModule:SetBunnyhop(state)
    BunnyHopEnabled = state
end

function ESPModule:SetBuso(state)
    BusoEnabled = state
    if state then
        pcall(function() CommF:InvokeServer("Buso") end)
    end
end

function ESPModule:SetESP(state)
	ESPEnabled = state
    if state then
        for _, p in pairs(game.Players:GetPlayers()) do
            if p ~= game.Players.LocalPlayer then
                setupPlayerESP(p)
            end
        end
        espConn = game.Players.PlayerAdded:Connect(function(p)
            if p ~= game.Players.LocalPlayer then
                setupPlayerESP(p)
            end
        end)
    else
        for _, v in pairs(ESPs) do
            v:Destroy()
        end
        ESPs = {}
        
        removeESP(p)

        if espConn then
            espConn:Disconnect()
            espConn = nil
        end
    end
end

-- =========================
-- Character Respawn Handling
-- =========================
local function onCharacterAdded(newChar)
    char = newChar
    humanoid = char:WaitForChild("Humanoid")

    if BunnyHopEnabled then
        -- nothing extra needed, the hookmetamethod will keep working
    end
    if V3Enabled then
        startV3Loop()
    end
    if BusoEnabled then
        pcall(function() CommF:InvokeServer("Buso") end)
    end
    if ESPEnabled then
        for _, p in pairs(game.Players:GetPlayers()) do
            if p ~= player then
                setupPlayerESP(p)
            end
        end
    end
end

if player.Character then
    onCharacterAdded(player.Character)
end
player.CharacterAdded:Connect(onCharacterAdded)

return ESPModule
