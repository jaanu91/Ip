local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/land9678/Sapi-Hub-V1/refs/heads/main/KavoUI.txt"))()
local SilentAimModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/jaanu91/Ip/refs/heads/main/Op"))()
local OthersStuffsModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/jaanu91/Ip/refs/heads/main/Mot"))()
local UiSettingsModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/jaanu91/Ip/refs/heads/main/Vot"))()
local ZSkillModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/jaanu91/Ip/refs/heads/main/Teku"))()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local PlayerList = {"None"}

local toggleGui = Instance.new("ScreenGui")
toggleGui.Name = "ToggleGui"
toggleGui.Parent = game.CoreGui

local toggleButton = Instance.new("ImageButton")
toggleButton.Name = "SHV1"
toggleButton.Size = UDim2.new(0, 40, 0, 40)
toggleButton.Position = UDim2.new(0, 5, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.BackgroundTransparency = 0.2
toggleButton.BorderSizePixel = 0
toggleButton.ZIndex = 9999
toggleButton.Image = "rbxassetid://76926193047725"
toggleButton.Parent = toggleGui

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 8)
toggleCorner.Parent = toggleButton

UiSettingsModule:MakeDraggable(toggleButton)

local Settings = OthersStuffsModule.LoadSettings()

local executor = "Unknown"
if syn then
    executor = "Synapse X"
elseif KRNL_LOADED then
    executor = "KRNL"
elseif fluxus then
    executor = "Fluxus"
elseif getexecutorname then
    local success, execName = pcall(getexecutorname)
    if success and type(execName) == "string" then
        executor = execName
    end
end

local execStatus = (executor == "Xeno" or executor:lower():find("solara") or executor:lower():find("krnl")) and "Not Working" or "Working"

local Window = Library.CreateLib("Sapi Hub BF PvP Ëƒá´—Ë‚  |  " .. executor, UiSettingsModule.currentTheme)

local Tab = Window:NewTab("â—‡ãƒ»Executor Status")
local Section = Tab:NewSection("â—ˆãƒ»Information")

Section:NewLabel("Executor: " .. executor)
Section:NewLabel("Status: " .. execStatus)

local Tab = Window:NewTab("â›©ãƒ»Silent Aimbot")
local Section = Tab:NewSection("âš“ãƒ»Settings")

local SilentAimPlayersToggle = Section:NewToggle("ãƒ»SilentAim Players", "Lock onto nearest player", function(state)
    SilentAimModule:SetPlayerSilentAim(state)
    Settings["SilentAimPlayers"] = state
end)

local SilentAimNPCToggle = Section:NewToggle("ãƒ»SilentAim Npcs", "Lock onto nearest npc", function(state)
    SilentAimModule:SetNPCSilentAim(state)
    Settings["SilentAimNPC"] = state
end)

local SilentAimPedictionToggle = Section:NewToggle("ãƒ»SilentAim Prediction", "Prediction on target", function(state)
    SilentAimModule:SetPrediction(state)
    Settings["SilentAimPediction"] = state
end)

Section:NewDropdown("ãƒ»Prediction Future | Default 0.1s", "Select max Prediction for Silent Aim", {"0.2", "0.3", "0.4"}, function(selected)
    local num = tonumber(selected)
    if num then
        SilentAimModule:SetPredictionAmount(num)
        Settings["SilentAimPredictionFuture"] = num
    end
end)

Section:NewDropdown("ãƒ»Distance Limit | Default 1000m", "Select max distance for aimbot", {"200", "400", "600"}, function(selected)
    local num = tonumber(selected)
    if num then
        SilentAimModule:SetDistanceLimit(num)
        Settings["SilentAimDistanceLimit"] = num
    end
end)

for _, plr in ipairs(Players:GetPlayers()) do
    if plr ~= Players.LocalPlayer then
        table.insert(PlayerList, plr.Name)
    end
end

local PlayerDropdown = Section:NewDropdown("ãƒ»Select Player Target", "Choose a player to lock onto", PlayerList, function(selected)
    if selected == "None" then
        SilentAimModule:SetSelectedPlayer(nil)
    else
        SilentAimModule:SetSelectedPlayer(selected)
    end
end)

local function RefreshPlayerList()
    local newList = {"None"}
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= Players.LocalPlayer then
            table.insert(newList, plr.Name)
        end
    end
    PlayerDropdown:Refresh(newList, true)
end

Players.PlayerAdded:Connect(RefreshPlayerList)
Players.PlayerRemoving:Connect(RefreshPlayerList)
RefreshPlayerList()

local ZSkillToggle = Section:NewToggle("ãƒ»GodhumanZ Aimlock", "I only set Godhuman", function(state)
    ZSkillModule:SetZSkills(state)
    Settings["ZSkills"] = state
end)

Section:NewButton("Join Discord", "Get Link Discord server", function()
	local link = "https://discord.gg/fKwqmB4C"
    if setclipboard then
        setclipboard(link)
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Sapi Hub",
            Text = "Copied Discord Link!",
            Duration = 5
        })
    end
end)

local Tab = Window:NewTab("âš™ãƒ»Settings Manager")
local Section = Tab:NewSection("ðŸ’¾ãƒ»Settings")

Section:NewTextBox("Paste Job Id Here", "Paste JobId and press Enter", function(jobid)
    if jobid and jobid ~= "" then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, jobid, Players.LocalPlayer)
    end
end)

Section:NewButton("Save Current Settings", "Save all current settings", function()
    OthersStuffsModule.SaveSettings(Settings)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Sapi Hub",
        Text = "Settings Saved!",
        Duration = 4
    })
end)

Section:NewButton("Reset Settings", "Clear saved settings", function()
    OthersStuffsModule.ResetSettings()
    Settings = {} -- also clear local
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Sapi Hub",
        Text = "Settings Reset!",
        Duration = 4
    })
end)

Section:NewButton("Hop Server", "New server", function()
    StuffsModule:SetHopServer()
end)

Section:NewButton("Rejoin Server", "Rejoin your server", function()
    StuffsModule:SetRejoinServer()
end)

Section:NewDropdown("Select Theme", "Choose a color theme", UiSettingsModule:getThemeNames(), function(selected)
    local newColor = UiSettingsModule.themes[selected]
    if newColor then
        UiSettingsModule:updateSchemeColor(newColor, Library)
    end
end)

Section:NewDropdown("Select Background Theme", "Choose a color background", UiSettingsModule:getBackgroundThemeNames(), function(selected)
    local newColor = UiSettingsModule.backgroundThemes[selected]
    if newColor then
        UiSettingsModule:updateBackgroundColor(newColor, Library)
    end
end)

Section:NewDropdown("Select TextColor", "Choose a textcolor", UiSettingsModule:getThemeNames(), function(selected)
    local newColor = UiSettingsModule.themes[selected]
    if newColor then
        UiSettingsModule:updateTextColor(newColor, Library)
    end
end)

Settings = OthersStuffsModule.LoadSettings()

OthersStuffsModule:ApplySettings(Settings, {
    SilentAim = SilentAimModule,
    Ui = UiSettingsModule,
    Zskill= ZSkillModule
}, {
    SilentAimPlayers = SilentAimPlayersToggle,
    SilentAimNPC = SilentAimNPCToggle,
    ZSkills = ZSkillToggle
})

OthersStuffsModule.StartFruitNotifier()

toggleButton.MouseButton1Click:Connect(function()
    Library:ToggleUI()
end)
