local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/land9678/Sapi-Hub-V1/refs/heads/main/KavoUI.txt"))()
local AimlockModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/jaanu91/Ip/refs/heads/main/Dk"))()
local ESPModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/jaanu91/Ip/refs/heads/main/Gk"))()
local SilentAimModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/jaanu91/Ip/refs/heads/main/Bg"))()
local StuffsModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/jaanu91/Ip/refs/heads/main/Stuf"))()
local UserInputService = game:GetService("UserInputService")
local SETTINGS_FILE = "SapiHub_Settings.json"
local HttpService = game:GetService("HttpService")

local Settings = {}

local toggleGui = Instance.new("ScreenGui")
toggleGui.Name = "ToggleGui"
toggleGui.Parent = game.CoreGui

local toggleButton = Instance.new("ImageButton")
toggleButton.Name = "SHV1"
toggleButton.Size = UDim2.new(0, 40, 0, 40)
toggleButton.Position = UDim2.new(0, 5, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.BackgroundTransparency = 0.2
toggleButton.BorderSizePixel = 0
toggleButton.ZIndex = 9999
toggleButton.Image = "rbxassetid://76926193047725"
toggleButton.Parent = toggleGui

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 8)
toggleCorner.Parent = toggleButton

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	toggleButton.Position = UDim2.new(
		startPos.X.Scale,
		startPos.X.Offset + delta.X,
		startPos.Y.Scale,
		startPos.Y.Offset + delta.Y
	)
end

toggleButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = toggleButton.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

toggleButton.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

local function LoadSettings()
    if isfile and isfile(SETTINGS_FILE) then
        local success, data = pcall(function()
            return HttpService:JSONDecode(readfile(SETTINGS_FILE))
        end)
        if success and data then
            Settings = data
        else
            Settings = {}
        end
    else
        Settings = {}
    end
end

local function SaveSettings()
    if writefile then
        writefile(SETTINGS_FILE, HttpService:JSONEncode(Settings))
    end
end

local function ResetSettings()
    if delfile and isfile and isfile(SETTINGS_FILE) then
        delfile(SETTINGS_FILE)
    end
    Settings = {}
end

local Window = Library.CreateLib("Sapi Hub BF PvP ÀÉ·¥óÀÇ", "DarkTheme")

local Tab = Window:NewTab("‚õì„ÉªChangesLogs")
local Section = Tab:NewSection("‚úè„ÉªUpdated")

Section:NewLabel("‚Ä¢ Added AutoSave or Reset Settings ‚úî")
Section:NewLabel("‚Ä¢ Added AntiAfk ‚úî")
Section:NewLabel("‚Ä¢ Added Fast Attack ‚úî")
Section:NewLabel("‚Ä¢ Added Server hop or Rejoin ‚úî")
Section:NewLabel("‚Ä¢ Fixed in Blox Fruits Event ‚úî")
Section:NewLabel("‚Ä¢ Fixed Team check in Aimlock ‚úî")
Section:NewLabel("‚Ä¢ Fixed Esp ‚úî")

local Tab = Window:NewTab("‚ùñ„ÉªAimbot")
local Section = Tab:NewSection("‚òò„ÉªSettings")

local AimlockPlayersToggle = Section:NewToggle("„ÉªAimlock Players", "Lock onto nearest player", function(state)
    AimlockModule:SetPlayerAimlock(state)
    Settings["AimlockPlayers"] = state
end)

local AimlockPlayersMiniTogglePlayersToggle = Section:NewToggle("„ÉªAimlock Mini Toggle Players", "Lock onto nearest player", function(state)
    AimlockModule:SetMiniTogglePlayerAimlock(state)
    Settings["AimlockPlayersMiniTogglePlayers"] = state
end)

local AimlockNPCToggle = Section:NewToggle("„ÉªAimlock NPC", "Lock onto nearest NPC/Boss", function(state)
    AimlockModule:SetNpcAimlock(state)
    Settings["AimlockNPC"] = state
end)

local AimlockPlayersMiniToggleNPCToggle = Section:NewToggle("„ÉªAimlock Mini Toggle NPC", "Lock onto nearest NPC/Boss", function(state)
    AimlockModule:SetMiniToggleNpcAimlock(state)
    Settings["AimlockPlayersMiniToggleNPC"] = state
end)

local PredictionToggle = Section:NewToggle("„ÉªPrediction", "Predict enemy movement", function(state)
    AimlockModule:SetPrediction(state)
    Settings["Prediction"] = state
end)

Section:NewDropdown("„ÉªPrediction Amount | Default 0.1s", "Select max Prediction for Aimlock", {"0.2", "0.3", "0.4"}, function(selected)
    local num = tonumber(selected)
    if num then
        AimlockModule:SetPredictionTime(num)
        Settings["PredictionAmount"] = num
    end
end)

local Tab = Window:NewTab("‚õ©„ÉªSilent Aimbot")
local Section = Tab:NewSection("‚öì„ÉªSettings")

local SilentAimPlayersToggle = Section:NewToggle("„ÉªSilentAim Players", "Lock onto nearest player", function(state)
    SilentAimModule:SetPlayerSilentAim(state)
    Settings["SilentAimPlayers"] = state
end)

local SilentAimNPCToggle = Section:NewToggle("„ÉªSilentAim Npcs", "Lock onto nearest npc", function(state)
    SilentAimModule:SetNPCSilentAim(state)
    Settings["SilentAimNPC"] = state
end)

local SilentAimPedictionToggle = Section:NewToggle("„ÉªSilentAim Prediction", "Prediction on target", function(state)
    SilentAimModule:SetPrediction(state)
    Settings["SilentAimPediction"] = state
end)

Section:NewDropdown("„ÉªPrediction Future | Default 0.1s", "Select max Prediction for Silent Aim", {"0.2", "0.3", "0.4"}, function(selected)
    local num = tonumber(selected)
    if num then
        SilentAimModule:SetPredictionAmount(num)
        Settings["SilentAimPredictionFuture"] = num
    end
end)

Section:NewDropdown("„ÉªDistance Limit | Default 1000m", "Select max distance for aimbot", {"200", "400", "600"}, function(selected)
    local num = tonumber(selected)
    if num then
        SilentAimModule:SetDistanceLimit(num)
        Settings["SilentAimDistanceLimit"] = num
    end
end)

local Tab = Window:NewTab("‚úø„ÉªFeatures")
local Section = Tab:NewSection("‚öú„ÉªSettings")

Section:NewButton("Join Discord", "Get Link Discord server", function()
	local link = "https://discord.gg/rUenZDHS"
    if setclipboard then
        setclipboard(link)
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Sapi Hub",
            Text = "Copied Discord Link!",
            Duration = 5
        })
    end
end)

local ESPPlayersToggle = Section:NewToggle("„ÉªESP Players", "Toggle Player ESP", function(state)
    ESPModule:SetESP(state)
    Settings["ESPPlayers"] = state
end)

local VSkillToggle = Section:NewToggle("„ÉªV3 Skill", "Auto activate V3 ability", function(state)
    ESPModule:SetV3(state)
    Settings["VSkill"] = state
end)

local BunnyHopToggle = Section:NewToggle("„ÉªBunny hop", "Toggle Bunnyhop", function(state)
    ESPModule:SetBunnyhop(state)
    Settings["BunnyHop"] = state
end)

local AuraSkillToggle = Section:NewToggle("„ÉªAura Skill", "Auto activate Buso", function(state)
    ESPModule:SetBuso(state)
    Settings["AuraSkill"] = state
end)

local FpsOrPingsToggle = Section:NewToggle("„ÉªFps Or Pings", "Display Ping or Fps", function(state)
    StuffsModule:SetPingsOrFps(state)
    Settings["FpsOrPings"] = state
end)

Section:NewTextBox("Speed Hack", "WalkSpeedValue", function(speedfunc)
  getgenv().WalkSpeedValue = speedfunc
    if getgenv().WalkSpeedValue then
        local Player = game:service'Players'.LocalPlayer
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
            Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue
            Settings["SpeedHack"] = getgenv().WalkSpeedValue
        end)
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue
    end
end)

local FpsBoostToggle = Section:NewToggle("„ÉªFps Boost", "Increase Fps", function(state)
    StuffsModule:SetFpsBoost(state)
    Settings["FpsBoost"] = state
end)

local INFEnergyToggle = Section:NewToggle("„ÉªINF Energy", "Max Energy", function(state)
    StuffsModule:SetINFEnergy(state)
    Settings["INFEnergy"] = state
end)

local WalkonWaterToggle = Section:NewToggle("„ÉªWalk on Water", "Travel in Water", function(state)
    StuffsModule:SetWalkWater(state)
    Settings["WalkonWater"] = state
end)

local FastAttackToggle = Section:NewToggle("„ÉªFast Attack", "Fast Attack", function(state)
    StuffsModule:SetFastAttack(state)
    Settings["FastAttack"] = state
end)

local AntiAFKToggle = Section:NewToggle("„ÉªAntiAfk", "AntiAfk only on before you off", function(state)
    ESPModule:SetAntiAfk(state)
    Settings["AntiAFK"] = state
end)

local Tab = Window:NewTab("‚öô„ÉªSettings Manager")
local Section = Tab:NewSection("üíæ„ÉªSettings")

Section:NewButton("Save Current Settings", "Save all current settings", function()
    SaveSettings()
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Sapi Hub",
        Text = "Settings Saved!",
        Duration = 4
    })
end)

Section:NewButton("Reset Settings", "Clear saved settings", function()
    ResetSettings()
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Sapi Hub",
        Text = "Settings Reset!",
        Duration = 4
    })
end)

Section:NewButton("Hop Server", "New server", function()
    StuffsModule:SetHopServer()
end)

Section:NewButton("Rejoin Server", "Rejoin your server", function()
    StuffsModule:SetRejoinServer()
end)

LoadSettings()
if Settings["AimlockPlayers"] ~= nil then
    AimlockModule:SetPlayerAimlock(Settings["AimlockPlayers"])
    AimlockPlayersToggle:UpdateToggle(nil, Settings["AimlockPlayers"])
end

if Settings["AimlockPlayersMiniTogglePlayers"] ~= nil then
    AimlockModule:SetMiniTogglePlayerAimlock(Settings["AimlockPlayersMiniTogglePlayers"])
    AimlockPlayersMiniTogglePlayersToggle:UpdateToggle(nil, Settings["AimlockPlayersMiniTogglePlayers"])
end

if Settings["AimlockNPC"] ~= nil then
    AimlockModule:SetNpcAimlock(Settings["AimlockNPC"])
    AimlockNPCToggle:UpdateToggle(nil, Settings["AimlockNPC"])
end

if Settings["AimlockPlayersMiniToggleNPC"] ~= nil then
    AimlockModule:SetMiniToggleNpcAimlock(Settings["AimlockPlayersMiniToggleNPC"])
    AimlockPlayersMiniToggleNPCToggle:UpdateToggle(nil, Settings["AimlockPlayersMiniToggleNPC"])
end

if Settings["Prediction"] ~= nil then
    AimlockModule:SetPrediction(Settings["Prediction"])
    PredictionToggle:UpdateToggle(nil, Settings["Prediction"])
end

if Settings["SilentAimPlayers"] ~= nil then
    SilentAimModule:SetPlayerSilentAim(Settings["SilentAimPlayers"])
    SilentAimPlayersToggle:UpdateToggle(nil, Settings["SilentAimPlayers"])
end

if Settings["SilentAimNPC"] ~= nil then
    SilentAimModule:SetNPCSilentAim(Settings["SilentAimNPC"])
    SilentAimNPCToggle:UpdateToggle(nil, Settings["SilentAimNPC"])
end

if Settings["SilentAimPediction"] ~= nil then
    SilentAimModule:SetPrediction(Settings["SilentAimPediction"])
    SilentAimPedictionToggle:UpdateToggle(nil, Settings["SilentAimPediction"])
end

if Settings["ESPPlayers"] ~= nil then
    ESPModule:SetESP(Settings["ESPPlayers"])
    ESPPlayersToggle:UpdateToggle(nil, Settings["ESPPlayers"])
end

if Settings["VSkill"] ~= nil then
    ESPModule:SetV3(Settings["VSkill"])
    VSkillToggle:UpdateToggle(nil, Settings["VSkill"])
end

if Settings["BunnyHop"] ~= nil then
    ESPModule:SetBunnyhop(Settings["BunnyHop"])
    BunnyHopToggle:UpdateToggle(nil, Settings["BunnyHop"])
end

if Settings["AuraSkill"] ~= nil then
    ESPModule:SetBuso(Settings["AuraSkill"])
    AuraSkillToggle:UpdateToggle(nil, Settings["AuraSkill"])
end

if Settings["FpsOrPings"] ~= nil then
    StuffsModule:SetPingsOrFps(Settings["FpsOrPings"])
    FpsOrPingsToggle:UpdateToggle(nil, Settings["FpsOrPings"])
end

if Settings["FpsBoost"] ~= nil then
    StuffsModule:SetFpsBoost(Settings["FpsBoost"])
    FpsBoostToggle:UpdateToggle(nil, Settings["FpsBoost"])
end

if Settings["INFEnergy"] ~= nil then
    StuffsModule:SetINFEnergy(Settings["INFEnergy"])
    INFEnergyToggle:UpdateToggle(nil, Settings["INFEnergy"])
end

if Settings["FastAttack"] ~= nil then
    StuffsModule:SetFastAttack(Settings["FastAttack"])
    FastAttackToggle:UpdateToggle(nil, Settings["FastAttack"])
end

if Settings["WalkonWater"] ~= nil then
    StuffsModule:SetWalkWater(Settings["WalkonWater"])
    WalkonWaterToggle:UpdateToggle(nil, Settings["WalkonWater"])
end

if Settings["AntiAFK"] ~= nil then
    ESPModule:SetAntiAfk(Settings["AntiAFK"])
    AntiAFKToggle:UpdateToggle(nil, Settings["AntiAFK"])
end

if Settings["PredictionAmount"] then
    AimlockModule:SetPredictionTime(Settings["PredictionAmount"])
end

if Settings["SilentAimPredictionFuture"] then
    SilentAimModule:SetPredictionAmount(Settings["SilentAimPredictionFuture"])
end

if Settings["SilentAimDistanceLimit"] then
    SilentAimModule:SetDistanceLimit(Settings["SilentAimDistanceLimit"])
end

if Settings["SpeedHack"] then
    local Player = game:service'Players'.LocalPlayer
    local Humanoid = Player.Character and Player.Character:FindFirstChild("Humanoid")
    if Humanoid then
        getgenv().WalkSpeedValue = Settings["SpeedHack"]
        Humanoid.WalkSpeed = getgenv().WalkSpeedValue
        Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
            Humanoid.WalkSpeed = getgenv().WalkSpeedValue
        end)
    end
end

toggleButton.MouseButton1Click:Connect(function()
    Library:ToggleUI()
end)
