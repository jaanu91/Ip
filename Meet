local JakeModule = {}

local RS = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Mouse = RS:FindFirstChild("Mouse")

local realMouseHit = nil
local realMouseTarget = nil

if Mouse then
	pcall(function()
		realMouseHit = Mouse.Hit
		realMouseTarget = Mouse.Target
	end)
end

RunService.Heartbeat:Connect(function()
	if Mouse then
		pcall(function()
			realMouseHit = Mouse.Hit or realMouseHit
			realMouseTarget = Mouse.Target or realMouseTarget
		end)

		local gp = getgenv()
		if gp and gp.NPCPosition then
			pcall(function() Mouse.Hit = CFrame.new(gp.NPCPosition) end)
		elseif gp and gp.PlayersPosition then
			pcall(function() Mouse.Hit = CFrame.new(gp.PlayersPosition) end)
		end
	end
end)

spawn(function()
	local success, mt = pcall(function() return getrawmetatable(game) end)
	if not success or not mt then return end

	local oldNamecall = mt.__namecall
	if not oldNamecall then return end

	setreadonly(mt, false)
	mt.__namecall = newcclosure(function(self, ...)
		local method = getnamecallmethod and getnamecallmethod() or ""
		local args = {...}

		if tostring(method) == "InvokeServer" and typeof(args[1]) == "string" then
			local skill = args[1]:upper()

			-- Only hook X skill when Buddy Sword is present (equipped or in backpack)
			if skill == "X" then
				local player = game.Players.LocalPlayer
				local char = player.Character
				local backpack = player:FindFirstChild("Backpack")

				local hasBuddySword = 
					(char and char:FindFirstChild("Buddy Sword")) or
					(backpack and backpack:FindFirstChild("Buddy Sword"))

				if hasBuddySword then
					local gp = getgenv()
					local targetPos = nil

					if gp and gp.SilentAimPlayersEnabled and gp.PlayersPosition then
						targetPos = gp.PlayersPosition
					elseif gp and gp.SilentAimNPCsEnabled and gp.NPCPosition then
						targetPos = gp.NPCPosition
					end

					if targetPos then
						args[2] = targetPos
					end

					return oldNamecall(self, unpack(args))
				end
			end
		end

		return oldNamecall(self, ...)
	end)
	setreadonly(mt, true)
end)

return JakeModule
