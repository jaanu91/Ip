local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")

ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.10615778, 0, 0.16217947, 0)
ImageButton.Size = UDim2.new(0, 40, 0, 40)
ImageButton.Draggable = true
ImageButton.Image = "rbxassetid://76926193047725"

UICorner.CornerRadius = UDim.new(0, 8)
UICorner.Parent = ImageButton

ImageButton.MouseButton1Down:Connect(
    function()
        game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.End, false, game)
    end
)

local FastAttackEnabled = false
local bringmob = false

do
    local _ENV = (getgenv or getrenv or getfenv)()

    local function SafeWaitForChild(parent, childName)
        local success, result = pcall(function()
            return parent:WaitForChild(childName)
        end)
        if not success or not result then
            warn("noooooo: " .. childName)
        end
        return result
    end

    local function WaitChilds(path, ...)
        local last = path
        for _, child in {...} do
            last = last:FindFirstChild(child) or SafeWaitForChild(last, child)
            if not last then break end
        end
        return last
    end

    local VirtualInputManager = game:GetService("VirtualInputManager")
    local CollectionService = game:GetService("CollectionService")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local TeleportService = game:GetService("TeleportService")
    local RunService = game:GetService("RunService")
    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer

    if not Player then
        warn("Không tìm thấy người chơi cục bộ.")
        return
    end

    local Remotes = SafeWaitForChild(ReplicatedStorage, "Remotes")
    if not Remotes then return end

    local Validator = SafeWaitForChild(Remotes, "Validator")
    local CommF = SafeWaitForChild(Remotes, "CommF_")
    local CommE = SafeWaitForChild(Remotes, "CommE")

    local ChestModels = SafeWaitForChild(workspace, "ChestModels")
    local WorldOrigin = SafeWaitForChild(workspace, "_WorldOrigin")
    local Characters = SafeWaitForChild(workspace, "Characters")
    local Enemies = SafeWaitForChild(workspace, "Enemies")
    local Map = SafeWaitForChild(workspace, "Map")

    local EnemySpawns = SafeWaitForChild(WorldOrigin, "EnemySpawns")
    local Locations = SafeWaitForChild(WorldOrigin, "Locations")

    local RenderStepped = RunService.RenderStepped
    local Heartbeat = RunService.Heartbeat
    local Stepped = RunService.Stepped

    local Modules = SafeWaitForChild(ReplicatedStorage, "Modules")
    local Net = SafeWaitForChild(Modules, "Net")

    local sethiddenproperty = sethiddenproperty or function(...) return ... end
    local setupvalue = setupvalue or (debug and debug.setupvalue)
    local getupvalue = getupvalue or (debug and debug.getupvalue)

    local Settings = {
        AutoClick = true,
        ClickDelay = 0,
    }

    local Module = {}

    Module.FastAttack = (function()
        if _ENV.rz_FastAttack then
            return _ENV.rz_FastAttack
        end

        local FastAttack = {
            Distance = 100,
            attackMobs = true,
            attackPlayers = false,
            Equipped = nil
        }

        local RegisterAttack = SafeWaitForChild(Net, "RE/RegisterAttack")
        local RegisterHit = SafeWaitForChild(Net, "RE/RegisterHit")

        local function IsAlive(character)
        return character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0
        end

        local function ProcessEnemies(OthersEnemies, Folder)
            local BasePart = nil
            for _, Enemy in Folder:GetChildren() do
                local Head = Enemy:FindFirstChild("Head")
                if Head and IsAlive(Enemy) and Player:DistanceFromCharacter(Head.Position) < FastAttack.Distance then
                    if Enemy ~= Player.Character then
                        table.insert(OthersEnemies, { Enemy, Head })
                        BasePart = Head
                    end
                end
            end
            return BasePart
        end

        function FastAttack:Attack(BasePart, OthersEnemies)
            if not BasePart or #OthersEnemies == 0 then return end
            RegisterAttack:FireServer(Settings.ClickDelay or 0)
            RegisterHit:FireServer(BasePart, OthersEnemies)
        end

        function FastAttack:AttackNearest()
            local OthersEnemies = {}
            local Part1 = ProcessEnemies(OthersEnemies, Enemies)
            local Part2 = ProcessEnemies(OthersEnemies, Characters)
            if #OthersEnemies > 0 then
                self:Attack(Part1 or Part2, OthersEnemies)
            else
                task.wait(0)
            end
        end

        function FastAttack:BladeHits()
            local Equipped = IsAlive(Player.Character) and Player.Character:FindFirstChildOfClass("Tool")
            if Equipped and Equipped.ToolTip ~= "Gun" then
                self:AttackNearest()
            else
                task.wait(0)
            end
        end

        task.spawn(function()
            while task.wait(Settings.ClickDelay) do
                if Settings.AutoClick and FastAttackEnabled then
                    FastAttack:BladeHits()
                end
            end
        end)

        _ENV.rz_FastAttack = FastAttack
        return FastAttack
    end)()
end

function Tween2(KG)
    local Distance = (KG.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    local Speed = 200
    local tweenInfo = TweenInfo.new(Distance / Speed, Enum.EasingStyle.Linear)
    local tween = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, tweenInfo, {
        CFrame = KG
    })
    tween:Play()
    if _G.StopTween2 then
        tween:Cancel()
    end
    _G.Clip2 = true
    wait(Distance / Speed)
    _G.Clip2 = false
end
function BKP(Point)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Point
    task.wait()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Point
end
TweenSpeed = 350
function Tween(KG)
    local Distance = (KG.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    local Speed = TweenSpeed  
    local tweenInfo = TweenInfo.new(Distance / Speed, Enum.EasingStyle.Linear)
    local tween = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, tweenInfo, {
        CFrame = KG
    })
    tween:Play()
    if _G.StopTween then
        tween:Cancel()
    end
end

task.spawn(function()
	while task.wait(0.3) do
		if bringmob and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
			pcall(function()
				local player = game.Players.LocalPlayer
				local char = player.Character
				local hrp = char.HumanoidRootPart
				local enemies = workspace:FindFirstChild("Enemies")

				if not enemies then return end

				local nearestEnemy = nil
				local nearestHumanoid = nil
				local nearestDistance = math.huge

				for _, enemy in pairs(enemies:GetChildren()) do
					local hrpEnemy = enemy:FindFirstChild("HumanoidRootPart")
					local hum = enemy:FindFirstChild("Humanoid")
					if hrpEnemy and hum and hum.Health > 0 then
						local dist = (hrpEnemy.Position - hrp.Position).Magnitude
						if dist < nearestDistance then
							nearestEnemy = hrpEnemy
							nearestHumanoid = hum
							nearestDistance = dist
						end
					end
				end

				if nearestEnemy and nearestHumanoid then
					local abovePos = nearestEnemy.CFrame * CFrame.new(0, 25, 0)
					Tween2(abovePos)

					while bringmob and nearestHumanoid.Health > 0 do
						task.wait(0.2)
						for _, otherEnemy in pairs(enemies:GetChildren()) do
							local otherHRP = otherEnemy:FindFirstChild("HumanoidRootPart")
							local hum = otherEnemy:FindFirstChild("Humanoid")
							if otherHRP and hum and hum.Health > 0 then
								local dist = (otherHRP.Position - hrp.Position).Magnitude
								if dist <= 200 then
									if otherHRP ~= nearestEnemy then
										otherHRP.CFrame = CFrame.new(hrp.Position.X, hrp.Position.Y - 10, hrp.Position.Z)
									end
								end
							end
						end
					end
				end
			end)
		end
	end
end)

local workspace = game:GetService("Workspace")
local PlaceId = game.PlaceId

local World2ID = 4442272183
local World3ID = 7449423635

local World2 = (PlaceId == World2ID)
local World3 = (PlaceId == World3ID)

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

repeat
    wait()
until game:IsLoaded()

local Window =
    Fluent:CreateWindow(
    {
        Title = "Sapi Hub RaidsTvT",
        SubTitle = "Enjoy",
        TabWidth = 100,
        Size = UDim2.fromOffset(380, 260),
        Acrylic = false,
        Theme = "Dark",
        MinimizeKey = Enum.KeyCode.End
    }
)

local Tabs = {
    Main0 = Window:AddTab({Title = "Discord Link", Icon = "clipboard" }),
    Main1 = Window:AddTab({Title = "Menu Raids", Icon = "bow-arrow" })
}

local Options = Fluent.Options

Tabs.Main0:AddButton(
    {
        Title = "SapiHub",
        Description = "Discord Link",
        Callback = function()
            setclipboard("https://discord.gg/6Fm6yAYc")
        end
    }
)

local v136 = {
    "Flame",
    "Ice",
    "Quake",
    "Light",
    "Dark",
    "Spider",
    "Rumble",
    "Magma",
    "Buddha",
    "Sand",
    "Phoenix",
    "Dough"
}

local v137 =
    Tabs.Main1:AddDropdown(
    "DropdownRaid",
    {
        Title = "Select Chip",
        Description = "",
        Values = v136,
        Multi = false,
        Default = 1
    }
)

v137:SetValue(SelectChip)

v137:OnChanged(
    function(v353)
        SelectChip = v353
    end
)

local v138 =
    Tabs.Main1:AddToggle(
    "ToggleBuy",
    {
        Title = "Buy Chip",
        Description = "",
        Default = false
    }
)

v138:OnChanged(
    function(v354)
        _G.Auto_Buy_Chips_Dungeon = v354
    end
)

v138:SetValue(false)

spawn(
    function()
        while wait() do
            if _G.Auto_Buy_Chips_Dungeon then
                pcall(
                    function()
                        local v805 = {
                            [1] = "RaidsNpc",
                            [2] = "Select",
                            [3] = SelectChip
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v805))
                    end
                )
            end
        end
    end
)

local v139 =
    Tabs.Main1:AddToggle(
    "ToggleStart",
    {
        Title = "Start Selected Raids",
        Description = "",
        Default = false
    }
)

v139:OnChanged(
    function(v355)
        _G.Auto_StartRaid = v355
    end
)

v139:SetValue(false)

spawn(function()
    while task.wait(1) do
        pcall(function()
            if _G.Auto_StartRaid then
                local raidMap = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("RaidMap")
                if raidMap then
                    local hasIslands = false
                    for _, island in ipairs(raidMap:GetChildren()) do
                        if island.Name:match("RaidIsland") then
                            hasIslands = true
                            break
                        end
                    end

                    if not hasIslands then
                        if World2 then
                            fireclickdetector(workspace.Map.CircleIsland.RaidSummon2.Button.Main.ClickDetector)
                        elseif World3 then
                            fireclickdetector(workspace.Map["Boat Castle"].RaidSummon2.Button.Main.ClickDetector)
                        end

                        task.wait(20)
                    end
                end
            end
        end)
    end
end)

local v140 =
    Tabs.Main1:AddToggle(
    "ToggleNextIsland",
    {
        Title = "Auto Next Island",
        Description = "",
        Default = false
    }
)

v140:OnChanged(
    function(v356)
        AutoNextIsland = v356

        if not v356 then
            _G.AutoNear = false
        end
    end
)

v140:SetValue(false)

spawn(function()
    local visitedIslands = {}
    while task.wait() do
        if AutoNextIsland then
            pcall(function()
                local character = game.Players.LocalPlayer.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local locations = game:GetService("Workspace")["_WorldOrigin"].Locations
                    local pos = character.HumanoidRootPart.Position
                    if (pos-Vector3.new(-6438.73535, 250.645355,-4501.50684)).Magnitude<1 or
                       (pos-Vector3.new(-5017.40869, 314.844055,-2823.0127)).Magnitude<1 then
                        visitedIslands={}  
                    end
                    if locations:FindFirstChild("Island 1") then
                        _G.AutoNear=true
                    end
                    if locations:FindFirstChild("Island 2") and not visitedIslands["Island 2"] then
                        Tween(locations:FindFirstChild("Island 2").CFrame)
                        visitedIslands["Island 2"]=true
                        AutoNextIsland=false
                        wait()
                        AutoNextIsland=true
                    elseif locations:FindFirstChild("Island 3") and not visitedIslands["Island 3"] then
                        Tween(locations:FindFirstChild("Island 3").CFrame)
                        visitedIslands["Island 3"]=true
                        AutoNextIsland=false
                        wait()
                        AutoNextIsland=true
                    elseif locations:FindFirstChild("Island 4") and not visitedIslands["Island 4"] then
                        Tween(locations:FindFirstChild("Island 4").CFrame)
                        visitedIslands["Island 4"]=true
                        AutoNextIsland=false
                        wait()
                        AutoNextIsland=true
                    elseif locations:FindFirstChild("Island 5") and not visitedIslands["Island 5"] then
                        Tween(locations:FindFirstChild("Island 5").CFrame)
                        visitedIslands["Island 5"]=true
                        AutoNextIsland=false
                        wait()
                        AutoNextIsland=true
                    end
                end
            end)
        end
    end
end)

local player = game.Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")
local character = player.Character or player.CharacterAdded:Wait()

local weaponsToCheck = {"Godhuman", "Sanguine Art", "Dragon Talon"}

local function checkForWeapons()
	for _, weaponName in ipairs(weaponsToCheck) do
		if backpack:FindFirstChild(weaponName) or character:FindFirstChild(weaponName) then
			return weaponName
		end
	end
	return nil
end

local SelectWeapon = checkForWeapons()

function AutoHaki()
    if not game:GetService("Players").LocalPlayer.Character:FindFirstChild("HasBuso") then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
    end
end

function EquipTool(ToolSe)
    if game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe) then
        local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe)
        wait()
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
    end
end

local v141 =
    Tabs.Main1:AddToggle(
    "ToggleAutoRaid",
    {
        Title = "Auto Raid",
        Description = "",
        Default = false
    }
)

v141:OnChanged(
    function(v357)
        AutoKill = v357
        bringmob = v357
        FastAttackEnabled = v357
    end
)

v141:SetValue(false)

task.spawn(function()
    while task.wait(0.5) do
        if AutoKill then
	        EquipTool(SelectWeapon)
			AutoHaki()
        end
    end
end)

local v142 =
    Tabs.Main1:AddToggle(
    "ToggleAwake",
    {
        Title = "Auto Currently Awkening",
        Description = "",
        Default = false
    }
)

v142:OnChanged(
    function(v358)
        AutoAwakenAbilities = v358
    end
)

v142:SetValue(false)

spawn(
    function()
        while task.wait() do
            if AutoAwakenAbilities then
                pcall(
                    function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Awakener", "Awaken")
                    end
                )
            end
        end
    end
)

local v143 =
    Tabs.Main1:AddToggle(
    "ToggleGetFruit",
    {
        Title = "Buy Chip By Lowest Beli FruitsTvT",
        Description = "",
        Default = false
    }
)

v143:OnChanged(
    function(v359)
        _G.Autofruit = v359
    end
)

spawn(
    function()
        while wait() do
            pcall(
                function()
                    if _G.Autofruit then
                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Rocket-Rocket"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Spin-Spin"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Chop-Chop"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Spring-Spring"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Bomb-Bomb"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Smoke-Smoke"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Spike-Spike"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Flame-Flame"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Falcon-Falcon"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Ice-Ice"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Sand-Sand"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Dark-Dark"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Ghost-Ghost"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Diamond-Diamond"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Light-Light"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Rubber-Rubber"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))

                        local v807 = {
                            [1] = "LoadFruit",
                            [2] = "Barrier-Barrier"
                        }

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(v807))
                    end
                end
            )
        end
    end
)

if World2 then
    Tabs.Main1:AddButton(
        {
            Title = "Teleport To Lab",
            Description = "",
            Callback = function()
                Tween2(CFrame.new(-6505.351, 255.138, -4506.073))
            end
        }
    )
elseif World3 then
    Tabs.Main1:AddButton(
        {
            Title = "Teleport To Lab",
            Description = "",
            Callback = function()
                Tween2(CFrame.new(-5038.623, 322.358, -2873.446))
            end
        }
    )
end
