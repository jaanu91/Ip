local StuffsModule = {}

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

local BuddySwordXEnabled = false

-- Utility to safely wait for cooldown frame
local function getCooldownFrame()
    local skills = LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("Skills")
    local buddySwordFrame = skills:FindFirstChild("Buddy Sword")
    if not buddySwordFrame then return nil end
    return buddySwordFrame:WaitForChild("X"):WaitForChild("Cooldown")
end

-- Later in your code, instead of defining cooldownFrame once:
local function isSkillReady()
    local cooldownFrame = getCooldownFrame()
    if cooldownFrame and cooldownFrame.Size.X.Scale == 1 then
        return true
    end
    return false
end

-- Utility to get HumanoidRootPart
local function getHRP(char)
return (char and char:FindFirstChild("HumanoidRootPart")) or nil
end

-- Find nearest player
local function getNearestTarget()
local char = LocalPlayer.Character
local hrp = getHRP(char)
if not hrp then return nil end

local nearestDist = math.huge  
local nearestPlayer = nil  

for _, plr in ipairs(Players:GetPlayers()) do  
    if plr ~= LocalPlayer then  
        local pchar = plr.Character  
        local phrp = getHRP(pchar)  
        if phrp then  
            local d = (hrp.Position - phrp.Position).Magnitude  
            if d < nearestDist then  
                nearestDist = d  
                nearestPlayer = plr  
            end  
        end  
    end  
end  

return nearestPlayer

end

-- Fire Skill X
local function fireSkillX()
local targetPlayer = getNearestTarget()
if not targetPlayer or not targetPlayer.Character then return end

local targetHRP = getHRP(targetPlayer.Character)  
if not targetHRP then return end  

local pos = targetHRP.Position  
local args = {  
    "X",  
    Vector3.new(pos.X, pos.Y, pos.Z)  
}  

local char = LocalPlayer.Character  
if not char then return end  

local humanoid = char:FindFirstChild("Humanoid")  
if not humanoid then return end  

local invoker = humanoid:FindFirstChild("")  
if invoker and invoker.InvokeServer then  
    invoker:InvokeServer(unpack(args))  
end

end

-- Detect touches on right side
-- Detect touches on right side
UserInputService.TouchEnded:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    -- Only right side of screen
    local screenSize = workspace.CurrentCamera.ViewportSize
    if input.Position.X <= screenSize.X / 2 then return end

    if BuddySwordXEnabled and isSkillReady() then
        fireSkillX()
    end
end)

function StuffsModule:SetBuddySwordX(state)
    BuddySwordXEnabled = state
end

return StuffsModule
