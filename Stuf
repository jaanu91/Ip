local StuffsModule = {}

local BuddySwordXEnabled = false
local DEBOUNCE_TIME = 0.2

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local lastFired = 0
local BuddySwordRemote -- RemoteFunction reference

-- Utility
local function getHRP(char)
    return (char and char:FindFirstChild("HumanoidRootPart")) or nil
end

local function getNearestTarget()
    local char = LocalPlayer.Character
    local hrp = getHRP(char)
    if not hrp then return nil end

    local nearestDist, nearestPlr = math.huge, nil
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            local phrp = getHRP(plr.Character)
            if phrp then
                local d = (hrp.Position - phrp.Position).Magnitude
                if d < nearestDist then
                    nearestDist, nearestPlr = d, plr
                end
            end
        end
    end
    return nearestPlr
end

local function fireXAtNearest()
    if not BuddySwordRemote then return end
    local targetPlayer = getNearestTarget()
    if not targetPlayer or not targetPlayer.Character then return end
    local targetHRP = getHRP(targetPlayer.Character)
    if not targetHRP then return end

    local args = {
        "X",
        targetHRP.Position
    }

    local ok, err = pcall(function()
        BuddySwordRemote:InvokeServer(unpack(args))
    end)
    if not ok then
        warn("Failed InvokeServer: " .. tostring(err))
    end
end

-- Detect Buddy Sword remote under humanoid
local function scanForRemote()
    local char = LocalPlayer.Character
    if not char then return end
    local hum = char:FindFirstChild("Humanoid")
    if hum then
        BuddySwordRemote = hum:FindFirstChildWhichIsA("RemoteFunction")
    end
end

LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid")
    scanForRemote()
end)
scanForRemote()

-- Hook __namecall to auto-fire when BuddySwordXEnabled
local mt = getrawmetatable(game)
setreadonly(mt, false)

local oldNamecall = mt.__namecall
mt.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()
    local args = {...}

    if method == "InvokeServer" and self == BuddySwordRemote then
        local result = oldNamecall(self, unpack(args))

        local now = tick()
        if BuddySwordXEnabled and now - lastFired >= DEBOUNCE_TIME then
            lastFired = now
            task.spawn(fireXAtNearest)
        end
        return result
    end

    return oldNamecall(self, unpack(args))
end)

setreadonly(mt, true)

-- API
function StuffsModule:SetBuddySwordX(state)
    BuddySwordXEnabled = state
end

return StuffsModule
