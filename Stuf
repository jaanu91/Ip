local StuffsModule = {}

local BuddySwordXEnabled = false
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

-- helper
local function getHRP(char)
	return (char and char:FindFirstChild("HumanoidRootPart")) or nil
end

-- find nearest target
local function getNearestTarget()
	local char = LocalPlayer.Character
	local hrp = getHRP(char)
	if not hrp then return nil end

	local nearestDist = math.huge
	local nearestHRP = nil

	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and plr.Character then
			local phrp = getHRP(plr.Character)
			if phrp then
				local d = (hrp.Position - phrp.Position).Magnitude
				if d < nearestDist then
					nearestDist = d
					nearestHRP = phrp
				end
			end
		end
	end

	return nearestHRP
end

-- repeatedly check & cast X if toggle on
RunService.Heartbeat:Connect(function()
	if BuddySwordXEnabled then
		local targetHRP = getNearestTarget()
		if targetHRP then
			local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid")
			if hum then
				local args = {
					"X",
					targetHRP.Position
				}
				hum:FindFirstChild(""):InvokeServer(unpack(args))
				BuddySwordXEnabled = false -- auto-turn off after firing once
			end
		end
	end
end)

-- toggle setter
function StuffsModule:SetBuddySwordX(state)
	BuddySwordXEnabled = state
end

return StuffsModule
