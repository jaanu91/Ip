-- ================= VSkillModule =================
local VSkillModule = {}

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local Cooldown = false
local SilentDisableTime = 3 -- seconds

function VSkillModule:CheckVSkillUsage(method, args, SilentAimModule)
    -- Make sure we're catching InvokeServer
    if tostring(method) == "InvokeServer" and args and args[1] == "V" then
        local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
        if tool and tool.Name == "Dough-Dough" and not Cooldown then
            Cooldown = true

            -- disable silent aim
            SilentAimModule:SetPlayerSilentAim(false)
            SilentAimModule:SetNPCSilentAim(false)

            -- re-enable after delay
            task.delay(SilentDisableTime, function()
                SilentAimModule:SetPlayerSilentAim(true)
                SilentAimModule:SetNPCSilentAim(true)
                VSkillModule:ResetCooldown()
            end)

            return true
        end
    end
    return false
end

function VSkillModule:ResetCooldown()
    Cooldown = false
end

local old
old = hookmetamethod(game, "__namecall", function(self, ...)
    local method = getnamecallmethod()
    local args = {...}

    if (method == "InvokeServer" or method == "FireServer") then
        local a1 = args[1]

        if typeof(a1) == "string" and a1:upper() == "V" then
            if currentTool and currentTool.Name == "Dough-Dough" then
                vActive = true
                local stamp = os.clock()
                task.delay(2, function()
                    if os.clock() - stamp >= 2 then
                        vActive = false
                        if tiltEnabled and next(rightTouches) then
                            tiltEnabled = false
                            stopTiltSmooth()
                            rightTouches = {}
                        end
                    end
                end)
            end
        end

        if typeof(a1) == "string" and a1:upper() == "Z" then
            if currentTool and currentTool.Name == "Shark Anchor" then
                sharkZActive = true
                local stamp = os.clock()
                task.delay(2, function()
                    if os.clock() - stamp >= 2 then
                        sharkZActive = false
                        if tiltEnabled and next(rightTouches) then
                            tiltEnabled = false
                            stopTiltSmooth()
                            rightTouches = {}
                        end
                    end
                end)
            end
        end   
    end
    return old(self, ...)
end)

return VSkillModule
